
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        String    @id @default(cuid())
  name      String
  subdomain String    @unique
  timezone  String
  currency  String
  language  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users      User[]
  services   Service[]
  clients    Client[]
  appointments Appointment[]
}

model User {
  id         String   @id @default(cuid())
  name       String
  email      String   @unique
  password   String
  role       Role
  avatarUrl  String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  company    Company  @relation(fields: [companyId], references: [id])
  companyId  String
  appointments Appointment[]
}

enum Role {
  ADMIN
  MANAGER
  PROFESSIONAL
  RECEPTIONIST
}

model Client {
  id           String   @id @default(cuid())
  name         String
  email        String?
  phone        String?
  birthdate    DateTime?
  notes        String?
  createdAt    DateTime @default(now())
  company      Company  @relation(fields: [companyId], references: [id])
  companyId    String
  appointments Appointment[]
}

model Service {
  id          String   @id @default(cuid())
  name        String
  duration    Int      // minutos
  price       Float
  category    String
  isCombo     Boolean  @default(false)
  createdAt   DateTime @default(now())
  company     Company  @relation(fields: [companyId], references: [id])
  companyId   String
  appointments Appointment[]
}

model Appointment {
  id           String   @id @default(cuid())
  date         DateTime
  status       AppointmentStatus @default(SCHEDULED)
  notes        String?
  client       Client   @relation(fields: [clientId], references: [id])
  clientId     String
  professional User     @relation(fields: [professionalId], references: [id])
  professionalId String
  service      Service  @relation(fields: [serviceId], references: [id])
  serviceId    String
  company      Company  @relation(fields: [companyId], references: [id])
  companyId    String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

enum AppointmentStatus {
  SCHEDULED
  COMPLETED
  CANCELLED
  NO_SHOW
}
